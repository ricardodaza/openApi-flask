swagger: "2.0"
info:
  description: "This is a sample server for Rules."
  version: "1.0.0"
  title: "Swagger Rules"
  contact:
    email: "ricardo.daza@amplia.es"
basePath: "/api/v2"
tags:
- name: "rules"
  description: "Everything about your Rules"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
schemes:
- "https"
- "http"
paths:
  /rules:
    get:
      tags:
        - "rules"
      summary: "Gets all rules"
      operationId: "get_all_rules"
      responses:
        200:
          description: "Successfully received all rules."
          schema:
            $ref: "#/definitions/Rules"
      x-swagger-router-controller: "poc_openapi.web.controllers.rules_controller"
    post:
      tags:
      - "rules"
      summary: "Add a new rule to opengate"
      operationId: "add_rule"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Rule object"
        required: true
        schema:
          $ref: "#/definitions/Rule"
      responses:
        201:
          description: "Rule added"
      x-swagger-router-controller: "poc_openapi.web.controllers.rules_controller"
  /rules/{rule_id}:
    get:
      tags:
      - "rules"
      summary: "Find rule by ID"
      operationId: "get_rule_by_id"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "rule_id"
        in: "path"
        description: "ID of rule to return"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Rule"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Rule not found"
      x-swagger-router-controller: "poc_openapi.web.controllers.rules_controller"
    put:
      tags:
      - "rules"
      summary: "Updates a rule in the opengate platform"
      operationId: "update_rule"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "rule_id"
        in: "path"
        description: "ID of rule that needs to be updated"
        required: true
        type: "string"
      - name: "Rule"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/Rule"
      responses:
        200:
          description: "Successfully updated rule"
        404:
          description: "Rule doesn't exist"
      x-swagger-router-controller: "poc_openapi.web.controllers.rules_controller"
    delete:
      tags:
      - "rules"
      summary: "Deletes a rule"
      operationId: "delete_rule"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "rule_id"
        in: "path"
        description: "Rule id to delete"
        required: true
        type: "string"
      responses:
        200:
          description: "Successfully deleted rule"
        404:
          description: "Rule not found"
      x-swagger-router-controller: "poc_openapi.web.controllers.rules_controller"
definitions:
  Rules:
    type: array
    items:
      $ref: "#/definitions/Rule"
  Rule:
    type: "object"
    required:
      - "name"
      - "organization"
      - "channel"
      - "javascript"
    properties:
      identifier:
        type: "string"
      name:
        type: "string"
      organization:
        type: "string"
      channel:
        type: "string"
      description:
        type: "string"
      javascript:
        type: "string"
    example:
      identifier: "29755a03-1bf1-4057-bc14-e4f631d69647"
      name: "identificationConflict"
      description: "Collected data found for unknown or more than one matching devices"
      organization: "root"
      channel: "default_channel"
      javascript: "if(entity['device.identification.conflict'] !== null) openAlarm();"